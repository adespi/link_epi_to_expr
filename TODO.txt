TODO:

build network for each cell line, color network using 1 color per cell line
look for interesting things in a disease and send it to a collaborator

get qvalue for other genes expression by using table cor=>qvalue
or keep only positions where cor<(cor for qvalue of 0.05)
play with gae

to build interaction network, test network with different threashold for : "best correlation", "nbr of correlation above : x"
try with sort of boxplot graph comparing with high-C interaction for example

smoothen correlation
plot density + interesting points with ggplot instead of R
bcftools dosage (0,1,2) > eqtl, correlate genome with express


Label
Explain code
Empirical Bayes frd
Position/negative Corr, add std
Figures resolution
Graph variational auto encoder
Representation learning on networks
Statistical test to store only important positions and marks

KEEP ONLY INTERESTING POSITIONS AND RERUN THE MODEL USING ALL ONLY THESE POSITIONS.
THEN PREDICT THE GENE EXPRESSION USING A LINEAR MODEL TO COMBINE THE DIFFERENT GENE MARKS AND NOT ONLY 1 MARK

after graph creation, visualise it with louvain, GEPHI or t-SNE

DONE:
PCA on expression, delete 5 first Components to delete confounding factors ==> files already formated like this
only analyse coding genes, and if possible only TF ==> done list_genes
Correlate log of expression ==> files already formated like this
standardise expression data (centrer reduire) ==> files already formated like this
calculate correlation without cor() by matrix multiplication ==> use python instead of R achieves this
show correlation for 1 point (expression=f(prediction))  forpatient(predictions$max_pred predictions$expression) ==> jupyter notebook
run kipoi with python to run on bigger batches and not build the model all over again ==> new script python_prediction.py
run on GPU ==> recreate deepsea environement with --gpu tag, install nvidia drivers
bcftools dosage (0,1,2) : eqtl, correlate genome with express ==> new script eQTL_analysis_(bcftools_dosage).ipynb
modify python_predictions_multiple_genes.py ==> done and integrated in pipeline
change output_prediction.bash to ignore files with no significant correlation during multiple expr corr
calculate average coefficient for each epigenome marks ==> done
